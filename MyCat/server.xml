<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mycat:server SYSTEM "server.dtd">
<mycat:server xmlns:mycat="http://io.mycat/">
	<system>
		<!-- 0为需要密码登陆、1为不需要密码登陆,默认为0.设置为1则需要指定默认账户-->
		<property name="nonePasswordLogin">0</property>
		<!-- 0遇上没有实现的报文(Unknown command),就会报错、1为忽略该报文,返回ok.在某些mysql客户端存在已经登录时还会继续发送登录报文,mycat会报错,该设置可以绕过这个错误-->
		<property name="ignoreUnknownCommand">0</property>
		<property name="useHandshakeV10">1</property>
		<property name="removeGraveAccent">1</property>
		<!-- 1为开启实时统计、0为关闭 -->
		<property name="useSqlStat">0</property>
		<!-- 1为开启全加班一致性检测、0为关闭 -->
		<property name="useGlobleTableCheck">0</property>
		<!-- SQL 执行超时 单位:秒 -->
		<property name="sqlExecuteTimeout">300</property>
		<!-- 指定MyCat全局序列类型.0默认本地文件;1-数据库方式 -->
		<property name="sequenceHandlerType">1</property>
		<property name="sequenceHanlderClass">io.mycat.route.sequence.handler.HttpIncrSequenceHandler</property>
		<!-- 必须带有MYCATSEQ_或者 mycatseq_进入序列匹配流程 注意MYCATSEQ_有空格的情况 -->
		<!-- INSERT INTO `travelrecord` (`id`,user_id) VALUES ('next value for MYCATSEQ_GLOBAL',"xxx"); -->
		<property name="sequnceHandlerPattern">(?:(\s*next\s+value\s+for\s*MYCATSEQ_(\w+))(,|\)|\s)*)+</property>
		<!-- 子查询中存在关联查询的情况下,检查关联字段中是否有分片字段.默认false -->
		<property name="subqueryRelationshipCheck">false</property>
		<!-- 1为开启mysql压缩协议 -->
        <property name="useCompression">1</property>
        <!-- 设置模拟的MySQL版本号 -->
        <property name="fakeMySQLVersion">5.6.20</property>
		<!-- 默认是65535 64K 用于sql解析时最大文本长度 -->
		<property name="maxStringLiteralLength">65535</property>
		<property name="backSocketNoDelay">1</property>
		<property name="frontSocketNoDelay">1</property>
		<!-- 可用线程数,默认为Runtime.getRuntime().avaliableProcessors()返回值 -->
		<property name="processors">1</property>
		<!-- 指定NIOProcessor上共享的businessExecutor固定线程池大小 -->
		<property name="processorExecutor">32</property>
		<!-- 默认为type 0:DirectByteBufferPool | type 1 ByteBufferArena | type 2 NettyBufferPool -->
		<property name="processorBufferPoolType">0</property>
		<!-- mycat服务端口 -->
		<property name="serverPort">8066</property>
		<!-- mycat管理端口 -->
		<property name="managerPort">9066</property>
		<!-- 连接最大空闲时间,单位毫秒 -->
		<property name="idleTimeout">300000</property>
		<property name="bindIp">0.0.0.0</property> 
		<property name="frontWriteQueueSize">4096</property>
		<!-- 分布式事务开关.0为不过滤分布式事务,1为过滤分布式事务(如果分布式事务内只涉及全局表,则不过滤),2为不过滤分布式事务,但是记录分布式事务日志 -->
		<property name="handleDistributedTransactions">0</property>
		<!-- off heap for merge/order/group/limit:1开启;0关闭 -->
		<property name="useOffHeapForMerge">1</property>
		<!-- 单位为m	-->
        <property name="memoryPageSize">64k</property>
		<!-- 单位为k -->
		<property name="spillsFileBufferSize">1k</property>
		<property name="useStreamOutput">0</property>
		<!-- 单位为m -->
		<property name="systemReserveMemorySize">384m</property>
		<!--是否采用zookeeper协调切换  -->
		<property name="useZKSwitch">false</property>
		<!-- XA Recovery Log日志路径 -->
		<property name="XARecoveryLogBaseDir">./</property>
		<!-- XA Recovery Log日志名称 -->
		<property name="XARecoveryLogBaseName">tmlog</property>
		<!-- 如果为 true的话 严格遵守隔离级别,不会在仅仅只有select语句的时候在事务中切换连接-->
		<property name="strictTxIsolation">false</property>
		<!-- 如果为0的话,涉及多个DataNode的catlet任务不会跨线程执行-->
		<property name="parallExecute">0</property>
		<property name="serverBacklog">2048</property>
		<!-- 数据库字符串集 -->
		<property name="charset">utf8</property>
	</system>
	
	<!-- 全局SQL防火墙设置 -->
	<!--白名单可以使用通配符%或着*-->
	<!--例如<host host="127.0.0.*" user="root"/>-->
	<!--例如<host host="127.0.*" user="root"/>-->
	<!--例如<host host="127.*" user="root"/>-->
	<!--例如<host host="1*7.*" user="root"/>-->
	<!--这些配置情况下对于127.0.0.1都能以root账户登录-->

	<firewall>
		<!-- IP白名单 -->
	   	<whitehost>
	    	<host host="1*7.0.0.*" user="root"/>
	   	</whitehost>
	   	<!-- SQL黑名单:check为true表示拦截,false不拦截 -->
       	<blacklist check="false">
       		<!-- 是否允许执行select语句 -->
       		<property name="selectAllow">true</property>
       		<!-- 是否允许执行delete语句 -->
       		<property name="deleteAllow">true</property>
       		<!-- 是否允许执行update语句 -->
       		<property name="updateAllow">true</property>
       		<!-- 是否允许执行insert语句 -->
       		<property name="insertAllow">true</property>
       		<!-- 是否允许创建表 -->
       		<property name="createTableAllow">true</property>
       		<!-- 是否允许使用set语法 -->
       		<property name="setAllow">true</property>
       		<!-- 是否允许执行alter table语句 -->
       		<property name="alterTableAllow">true</property>
       		<!-- 是否允许修改表 -->
       		<property name="dropTableAllow">true</property>
       		<!-- 是否允许执行commit语法 -->
       		<property name="commitAllow">true</property>
       		<!-- 是否允许执行roll back操作 -->
       		<property name="rollbackAllow">true</property>
       	</blacklist>
	</firewall>

	<!-- 用户标签:name->用户名 -->
	<user name="root" defaultAccount="true">
		<!-- 密码 -->
		<property name="password">123456</property>
		<!-- 逻辑库名称,可写多个,逗号隔开 -->
		<property name="schemas">TESTDB</property>
		<!-- 默认逻辑数据库.No MyCAT Database selected 错误前会尝试使用该schema作为schema,不设置则为null,报错 -->
		<property name="defaultSchema">TESTDB</property>
	</user>

	<!-- 其他用户 -->
	<user name="user">
		<property name="password">user</property>
		<property name="schemas">TESTDB</property>
		<!-- 是否开启只读,默认false -->
		<property name="readOnly">true</property>
		<property name="defaultSchema">TESTDB</property>

		<!-- 表级 DML 权限设置,check:true开启权限检查,默认false不开启 -->
		<!-- 4位权限数字,0代表禁止,1代表允许,依次是增改查删 -->
		<privileges check="false">
			<!-- 控制逻辑库权限 -->
			<schema name="TESTDB" dml="0110" >
				<!-- 控制表权限 -->
				<table name="tb01" dml="0000"></table>
				<table name="tb02" dml="1111"></table>
			</schema>
		</privileges>		
	</user>
</mycat:server>